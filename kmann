#!/usr/bin/sh 
# A simple script to mannage accounts recovery keys

file_name=$(basename "$0")
VAULT_DIR="$HOME/Vault"
MOUNT_DIR="$HOME/Documents/505.SEC-CRYPTIC"
ARCHIVE_NAME="Sensor.tar.gz"
ENCRYPTED_ARCHIVE_NAME="$ARCHIVE_NAME.gpg"

# create and encrypt tar archive
recreate_archive () {
	cd "$VAULT_DIR" || { echo "failed to change directory to $VAULT_DIR"; exit 1; } 
	if tar czvf "$ARCHIVE_NAME" --directory="$MOUNT_DIR" .; then
       		gpg --yes  -c "$ARCHIVE_NAME" || { echo "GPG encryption failed"; exit 1; }
		rm -v "$ARCHIVE_NAME"
		rm -v "$MOUNT_DIR/*"
	else
		echo "Error creating tar archive"
		exit 1
	fi

}

add_files () {
	cd  "$VAULT_DIR" || { echo "Error changing directory to $VAULT_DIR"; exit 1; } 
	gpg -d --verbose "$ENCRYPTED_ARCHIVE_NAME" > "$ARCHIVE_NAME" || { echo "GPG error decrypting tar archive"; exit 1; }
	if tar xzvf "$ARCHIVE_NAME" --directory "$MOUNT_DIR" ; then
		recreate_archive	
		mount_vault
	else
		echo "Error extracting tar archive"
		exit 1
	fi
}

mount_vault () {
	gpgconf --kill gpg-agent
	gpg -d --verbose "$VAULT_DIR"/"$ENCRYPTED_ARCHIVE_NAME" > "$VAULT_DIR"/"$ARCHIVE_NAME" || { echo "GPG error decrypting tar archive"; exit 1; }	
	if tar xfzv "$VAULT_DIR"/"$ARCHIVE_NAME"  --directory="$MOUNT_DIR" ; then
     		rm -v "$VAULT_DIR"/"$ARCHIVE_NAME"
	else
		echo "Error extracting tar archive"
		exit 1
	fi	
}


usage () {
	echo "$file_name : a simple script to mannage accounts recovery keys in an encrypted form"
	echo "usage : $file_name <Option>"
	echo -e "Option\n \
	--recreate    : to recreate the encrypted archive\n \
	--add         : to add a new file to the encrypted archive \n \
	--mount       : decrypt and mount the content of the archive to the specific dir\n \
	--unmount     : same as --recreate "

}

if [ -z $1 ]
then
	usage
	exit 1
else
	case $1 in
		--recreate)
			recreate_archive
		;;
		--add)
			add_files
		;;
		--mount)
			mount_vault
		;;
		--umount)
			recreate_archive
		;;
		*)
			usage
	esac
fi
exit 0
