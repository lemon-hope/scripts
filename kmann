#!/usr/bin/sh 
# A simple recovery keys mannager script

file_name=$(basename "$0")
VAULT_DIR="$HOME/Vault"
MOUNT_DIR="$HOME/Documents/505.SEC-CRYPTIC"
ARCHIVE_NAME="Sensor.tar.gz"
ENCRYPTED_ARCHIVE_NAME="$ARCHIVE_NAME.gpg"

# create and encrypt tar archive
recreate_archive () {
	cd $VAULT_DIR && tar czvf $ARCHIVE_NAME --directory=$MOUNT_DIR . 
       	yes | gpg -c $ARCHIVE_NAME 
	rm -v $ARCHIVE_NAME
	rm -v $MOUNT_DIR/*
}

add_files () {
	cd  $VAULT_DIR && gpg -d --verbose $ENCRYPTED_ARCHIVE_NAME > $ARCHIVE_NAME
	tar xzvf $ARCHIVE_NAME --directory $MOUNT_DIR
	recreate_archive	
	mount_vault
}

mount_vault () {
	gpg -d --verbose $VAULT_DIR/$ENCRYPTED_ARCHIVE_NAME > $VAULT_DIR/$ARCHIVE_NAME	
	tar xfzv $VAULT_DIR/$ARCHIVE_NAME  --directory $MOUNT_DIR
     	rm -v $VAULT_DIR/$ARCHIVE_NAME	
}


usage () {
	echo "$file_name : a simple script to mannage accounts recovery keys in an encrypted form"
	echo "usage : $file_name <Option>"
	echo -e "Option\n \
	--recreate    : to recreate the encrypted archive\n \
	--add         : to add a new file to the encrypted archive \n \
	--mount       : decrypt and mount the content of the archive to the specific dir\n \
	--unmount     : same as --recreate "

}

if [ -z $1 ]
then
	usage
	exit 1
else
	case $1 in
		--recreate)
			recreate_archive
		;;
		--add)
			add_files
		;;
		--mount)
			mount_vault
		;;
		--umount)
			recreate_archive
		;;
		*)
			usage
	esac
fi
exit 0
